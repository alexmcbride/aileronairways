@model IEnumerable<Timeline>

@{
    ViewData["Title"] = "Manage Timeline";
}

@section AddToHead{
    <script src="~/js/site.js"></script>
}

<button id="addTimelineBtn" class="modal-link-create-timeline mt-purple-circle-btn" title="Create New Timeline">&#43;</button>

<div id='myModal' class='modal'>
    <div class="modal-dialog">
        <div class="modal-content">
            <div id='myModalContent'></div>
        </div>
    </div>
</div>

<div id="timelinecontents" style="margin-right: auto; margin-left: auto; width:80%" @*class="col-lg-9 col-md-12" *@>
    <div class="row">
        <h3 class="paddin:0; col-lg-4 col-md-6 col-sm-6 col-xs-12 mt-purpule-color">@ViewData["Title"]</h3>
        <div class='input-group date col-lg-4 col-md-6 col-sm-6 col-xs-12' id='eventDateTime1'>
            <label for="myInput1" class="mt-purpule-color">Date from: &nbsp;</label><input type="text" class="myInput" id="myInput1" placeholder="Search period start date" title="Type in a name">
            <span class="input-group-addon myInput">
                <span class="glyphicon glyphicon-calendar"></span>
            </span>
        </div>
        <div class='input-group date col-lg-4 col-md-6 col-sm-6 col-xs-12' id='eventDateTime2'>
            <label for="myInput2" class="mt-purpule-color">Date to : &nbsp;</label><input type="text" class="myInput" id="myInput2" placeholder="Search period end date" title="Type in a name">
            <span class="input-group-addon myInput">
                <span class="glyphicon glyphicon-calendar"></span>
            </span>
        </div>
    </div>

    <table data-order='[[ 1, "des" ]]' id="tbltimelines" class="display @*responsive nowrap*@" style="width:100%">
        <thead>
            <tr class="mt-purpule-color">
                <th style="max-width:65%">Title</th>
                <th style="width:20%">Date Created</th>
                <th style="width:15%">Link</th>
            </tr>
        </thead>
        <tbody></tbody>
    </table>
</div>

@section scripts {
    <script src="https://cdn.datatables.net/v/dt/jszip-2.5.0/dt-1.10.16/af-2.2.2/b-1.5.0/b-colvis-1.5.0/b-html5-1.5.0/b-print-1.5.0/cr-1.4.1/r-2.2.1/rg-1.0.2/rr-1.2.3/sc-1.4.3/sl-1.2.4/datatables.min.js"></script>

    <script>
        function updateTable(jsondata) {
            var timelinetable = $('#tbltimelines').DataTable({
                data: jsondata,
                columns: [
                    {
                        mRender: function renderTitle(data, type, row) {
                            return '<a href="/timelines/' + row.id + '/events/">' + row.title + '</a> '
                        }
                    },
                    {
                        mRender: function (data, type, row) {
                            var date = new Date(row.creationTimeStamp);
                            var day = date.getDate();
                            var month = date.getMonth() + 1;
                            var hrs = date.getHours();
                            var min = date.getMinutes()
                            return (day > 10 ? day : "0" + day) + "/" + (month > 10 ? month : "0" + month) + "/" + date.getFullYear() + " " + (hrs > 10 ? hrs : "0" + hrs) + ":" + (min > 10 ? min : "0" + min);
                        }
                    },
                    {
                        mRender: function (data, type, row) {
                            return '<a href="javascript:void(0);" class="modal-link-edit-timeline" onclick="editTimeline(\'' + row.id + '\')">Edit</a> | ' +
                                '<a href="javascript:void(0);" /*href="/timelines/delete/' + row.id + '"*/ onclick="deleteTimeline(\'' + row.id + '\')">Delete</a>';
                        }, sortable: false
                    }
                ]
            });

            // Event listener to the two range filtering inputs to redraw on input
            $('#myInput1, #myInput2, .input-group, input').on('dp.change keyup', function () {
                timelinetable.draw();
            });
        }

        $.fn.dataTable.ext.search.push(function (settings, data, dataIndex) {
            var min = new Date(($('#myInput1').val().split(/\W/)[2]), ($('#myInput1').val().split('/')[1] - 1), $('#myInput1').val().split('/')[0]);
            var max = new Date(($('#myInput2').val().split(/\W/)[2]), ($('#myInput2').val().split('/')[1] - 1), $('#myInput2').val().split('/')[0]);
            var date = new Date((data[1].split(/\W/)[2]), data[1].split('/')[1] - 1, data[1].split('/')[0]) || 0;

            if ((isNaN(min) && isNaN(max)) ||
                (isNaN(min) && date <= max) ||
                (min <= date && isNaN(max)) ||
                (min <= date && date <= max)) {
                return true;
            }
            return false;
        });

        function displayCreateModal(data) {
            $('#myModalContent').html(data);
            $('#myModal').modal({ "backdrop": "static", keyboard: true });
            $('#myModal').modal('show');

            $('#create-form').on('submit', function (e) {
                e.preventDefault();

                disableFormElement('#btnSave', true);

                var data = $('#create-form').serialize();
                $.post('timelines/create', data, function (response) {
                    // If timeline was created response is OK followed by ID of new timeline.
                    if (response.startsWith('OK')) {
                        var id = response.split(' ')[1];
                        location.href = 'timelines/' + id + '/events'; // Redirect to events view.
                    }
                    else {
                        displayCreateModal(response);
                    }

                    disableFormElement('#btnSave', false);

                }, 'html');
            });
        }

        $(function () {
            $(".modal-link-create-timeline").click(function () {
                $.ajax({
                    type: "GET",
                    url: "@Url.Action("create", "timelines")",
                    contentType: "application/html; charset=utf-8",
                    datatype: "html",
                    success: function (data) {
                        displayCreateModal(data);
                    },
                    error: function (xhr, status, error) {
                        alert("Error - look in console.log");
                        console.log('Status: ' + status);
                        console.log('Error: ' + error);
                    }
                });
            });

            $.ajax({
                url: "@Url.Action("get", "timelines", new { Area = "api" })",
                method: 'GET',
                datatype: 'json',
                contentType: "application/json; charset=utf-8",
                table: '#tbltimelines',
                success: updateTable
            });
        });

        $("#closbtn").click(function () {
            $('#myModal').modal('hide');
        });

        function editTimeline(id) {
            $.ajax({
                type: "GET",
                url: "timelines/edit/" + id,
                contentType: "application/html; charset=utf-8",
                datatype: "html",
                success: function (data) {
                    displayEditModal(data, id);
                },
                error: function () {
                    alert("Error - look in console.log");
                    console.log('Status: ' + status);
                    console.log('Error: ' + error);
                }
            });
        }

        function displayEditModal(data, id) {
            $('#myModalContent').html(data);
            $('#myModal').modal({ "backdrop": "static", keyboard: true });
            $('#myModal').modal('show');

            $('#edit-form').on('submit', function (e) {
                e.preventDefault();

                disableFormElement('#btnSave', true);

                var data = $('#edit-form').serialize();
                $.post("timelines/edit/" + id, data, function (response) {
                    // If edit was successful post returns with OK
                    if (response.startsWith('OK')) {
                        location.href = "@Url.Action("index", "timelines")"; // Redirect here instead of on server-side
                        $('#myModal').modal('hide');
                    }
                    else {
                        // Otherwise redisplay form.
                        displayEditModal(response, id);
                    }

                    disableFormElement('#btnSave', false);
                }, 'html');
            });
        }


        function deleteTimeline(id) {
            $.ajax({
                type: "GET",
                url: "timelines/delete/" + id,
                contentType: "application/html; charset=utf-8",
                datatype: "html",
                success: function (data) {
                    displayDeleteModal(data, id);
                },
                error: function () {
                    alert("Error - look in console.log");
                    console.log('Status: ' + status);
                    console.log('Error: ' + error);
                }
            });
        }

        function displayDeleteModal(data, id) {
            $('#myModalContent').html(data);
            $('#myModal').modal({ "backdrop": "static", keyboard: true });
            $('#myModal').modal('show');

            $('#delete-form').on('submit', function (e) {
                e.preventDefault();

                disableFormElement('#btnSave', true);

                var data = $('#delete-form').serialize();
                $.post("timelines/delete/" + id, data, function (response) {
                    // If delete was successful post returns with OK
                    if (response.startsWith('OK')) {
                        location.href = "@Url.Action("index", "timelines")"; // Redirect here instead of on server-side
                        $('#myModal').modal('hide');
                    }
                    else {
                        // Otherwise redisplay form.
                        displayDeleteModal(response, id);
                    }

                    disableFormElement('#btnSave', false);
                }, 'html');
            });
        }

    </script>

    <script>
        $(function () {
            $('#eventDateTime1').datetimepicker({
                format: 'DD/MM/YYYY'
            });
        });
        $(function () {
            $('#eventDateTime2').datetimepicker({
                format: 'DD/MM/YYYY'
            });
        });
    </script>
}
