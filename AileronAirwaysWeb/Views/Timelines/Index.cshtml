@model IEnumerable<Timeline>

@{
    ViewData["Title"] = "Timeline Register";
}

@section AddToHead{

    <script src="~/js/site.js"></script>

    <link href="~/css/timelineIndex.css" rel="stylesheet" />
    <link href="~/css/timeline-sidebar.css" rel="stylesheet" />
}
@*<button id="addEventBtn" class="modal-link-create-timeline" title="Create New Timeline">&#43;</button>*@

<div class="content-wrapper">



    <div class="sidebar-wrapper">
        <div class="sidebar-toggle text-right">
            <div class="arrow leftArrow" id="sidebar-arrow"></div>
        </div>

        <div class="sidebar-content">
            <div class="search">
                <h6 class="text-uppercase">Filter Timelines</h6>

                <hr>
                <div class="wtForm">
                    <div class="form-group">
                        <button type="button" class="wtSearchBar btn btn-inverted-main" id="clearDates">
                            <span class="glyphicon glyphicon-remove"></span>&nbsp;&nbsp;Clear Filters
                        </button>
                    </div>
                    <hr class="HRgone640">

                    <div class="form-group">
                        <div class="input-group wtSearchBar">
                            <input type="text" class="form-control" placeholder="Search..." id="search">
                            @*<span class="input-group-addon">
                        <span class="glyphicon glyphicon-search"></span>
                    </span>*@
                        </div>
                    </div>

                </div>

                <div class="wtForm">
                    <div class="form-group">
                        <div class='input-group date wtSearchBar' id='startDate'>
                            <input type='text' class="form-control" id="startDateInput" placeholder="Start date" title="Enter a date" />
                            <span class="input-group-addon">
                                <span class="glyphicon glyphicon-calendar"></span>
                            </span>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class='input-group date wtSearchBar' id='endDate'>
                            <input type='text' class="form-control" id="endDateInput" placeholder="End date" title="Enter a date" />
                            <span class="input-group-addon">
                                <span class="glyphicon glyphicon-calendar"></span>
                            </span>
                        </div>
                    </div>
                </div>
                <hr>



            </div>
        </div>
    </div>










    <div class="main-content" style="overflow-x: auto; max-width: 100%;">
        <br />
        <h3 class="mainColor">
            <strong>@ViewData["Title"]</strong>
        </h3>
        <button class="btn btn-main modal-link-create-timeline" title="Create New Timeline">Create Timeline@*&#43;*@</button>

        <hr />
        <table class="display" data-order='[[ 1, 1 ]]' id="tbltimelines"  style=" width: 100%; max-width: 100%; overflow-x: auto;">
            <thead>
                <tr>
                    <th style="width: 40% !important;">Title</th>
                    <th style="width: 30% !important;">Created</th>
                    <th style="width: 30% !important;"></th>
                    @**@<th></th>
                </tr>
            </thead>
            <tbody></tbody>
        </table>
    </div>


    <div id="myModal" class="modal fade" tabindex="-1" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div id="myModalContent"></div>
            </div>
        </div>
    </div>
</div>

@section scripts {
    <script src="https://cdn.datatables.net/v/dt/jszip-2.5.0/dt-1.10.16/af-2.2.2/b-1.5.0/b-colvis-1.5.0/b-html5-1.5.0/b-print-1.5.0/cr-1.4.1/r-2.2.1/rg-1.0.2/rr-1.2.3/sc-1.4.3/sl-1.2.4/datatables.min.js"></script>



    <script>
     
        var timelinetable = null;
        function updateTable(jsondata) {
            timelinetable = $('#tbltimelines').DataTable({
                searching: true,
                bLengthChange: false,
                bAutoWidth: true,
                data: jsondata,
                columns: [
                    {
                        mRender: function renderTitle(data, type, row) {
                            return '<a href="/timelines/' + row.id + '/events/">' + row.title +' </a> '
                        }
                    },
                    {
                        mRender: function (data, type, row) {
                            return row.createdPretty;
                        }
                    },
                    {
                        mRender: function (data, type, row) {
                            return '<a href="javascript:void(0);" class="modal-link-edit-timeline" onclick="editTimeline(\'' + row.id + '\')">Edit</a> | ' +
                                '<a href="javascript:void(0);" /*href="/timelines/delete/' + row.id + '"*/ onclick="deleteTimeline(\'' + row.id + '\')">Delete</a>';
                        }, sortable: false
                    },
                    {
                        //This column is hidden and used for getting the timestamp for filtering
                        'visible': false,
                        mRender: function (data, type, row) {
                            return row.created;
                        }
                    }
                ]
            });
        }

        function titleFilter(data) {
            var search = $('#search').val();
            if (search == "") {
                return true;
            }
            return data[0].toLowerCase().includes(search);
        }

        function dateRangeFilter(data) {
            var startDate = $('#startDateInput').val().trim();
            var endDate = $('#endDateInput').val().trim();

            if (startDate == "" && endDate == "") {
                return true;
            }

            var min = moment(startDate);
            var max = moment(endDate);
            var date = moment(data[3]);
            return (startDate == "" || date.isAfter(min)) && (endDate == "" || date.isBefore(max));
        }

        $.fn.dataTable.ext.search.push(function (settings, data, dataIndex) {
            return titleFilter(data) && dateRangeFilter(data);
        });

        function displayCreateModal(data) {
            $('#myModalContent').html(data);
            $('#myModal').modal({ keyboard: true });
            $('#myModal').modal('show');

            $('#create-form').on('submit', function (e) {
                e.preventDefault();

                disableFormElement('#btnSave', true);

                var data = $('#create-form').serialize();
                $.post('timelines/create', data, function (response) {
                    // If timeline was created response is OK followed by ID of new timeline.
                    if (response.startsWith('OK')) {
                        var id = response.split(' ')[1];
                        location.href = 'timelines/' + id + '/events'; // Redirect to events view.
                    }
                    else {
                        displayCreateModal(response);
                    }

                    disableFormElement('#btnSave', false);

                }, 'html');
            });
        }

        $(function () {
            $(".modal-link-create-timeline").click(function () {
                $.ajax({
                    type: "GET",
                    url: "@Url.Action("create", "timelines")",
                    contentType: "application/html; charset=utf-8",
                    datatype: "html",
                    success: function (data) {
                        displayCreateModal(data);
                    },
                    error: function (xhr, status, error) {
                        alert("Error - look in console.log");
                        console.log('Status: ' + status);
                        console.log('Error: ' + error);
                    }
                });
            });

            $.ajax({
                url: "@Url.Action("get", "timelines", new { Area = "api" })",
                method: 'GET',
                datatype: 'json',
                contentType: "application/json; charset=utf-8",
                table: '#tbltimelines',
                success: updateTable
            });
        });

        $("#closbtn").click(function () {
            $('#myModal').modal('hide');
        });

        function editTimeline(id) {
            $.ajax({
                type: "GET",
                url: "timelines/edit/" + id,
                contentType: "application/html; charset=utf-8",
                datatype: "html",
                success: function (data) {
                    displayEditModal(data, id);
                },
                error: function () {
                    alert("Error - look in console.log");
                    console.log('Status: ' + status);
                    console.log('Error: ' + error);
                }
            });
        }

        function displayEditModal(data, id) {
            $('#myModalContent').html(data);
            $('#myModal').modal({ keyboard: true });
            $('#myModal').modal('show');

            $('#edit-form').on('submit', function (e) {
                e.preventDefault();

                disableFormElement('#btnSave', true);

                var data = $('#edit-form').serialize();
                $.post("timelines/edit/" + id, data, function (response) {
                    // If edit was successful post returns with OK
                    if (response.startsWith('OK')) {
                        location.href = "@Url.Action("index", "timelines")"; // Redirect here instead of on server-side
                        $('#myModal').modal('hide');
                    }
                    else {
                        // Otherwise redisplay form.
                        displayEditModal(response, id);
                    }

                    disableFormElement('#btnSave', false);
                }, 'html');
            });
        }


        function deleteTimeline(id) {
            $.ajax({
                type: "GET",
                url: "timelines/delete/" + id,
                contentType: "application/html; charset=utf-8",
                datatype: "html",
                success: function (data) {
                    displayDeleteModal(data, id);
                },
                error: function () {
                    alert("Error - look in console.log");
                    console.log('Status: ' + status);
                    console.log('Error: ' + error);
                }
            });
        }

        function displayDeleteModal(data, id) {
            $('#myModalContent').html(data);
            $('#myModal').modal({ keyboard: true });
            $('#myModal').modal('show');

            $('#delete-form').on('submit', function (e) {
                e.preventDefault();

                disableFormElement('#btnSave', true);

                var data = $('#delete-form').serialize();
                $.post("timelines/delete/" + id, data, function (response) {
                    // If delete was successful post returns with OK
                    if (response.startsWith('OK')) {
                        location.href = "@Url.Action("index", "timelines")"; // Redirect here instead of on server-side
                        $('#myModal').modal('hide');
                    }
                    else {
                        // Otherwise redisplay form.
                        displayDeleteModal(response, id);
                    }

                    disableFormElement('#btnSave', false);
                }, 'html');
            });
        }

        $(function () {





            // Event listener to the two range filtering inputs to redraw on input
            $('#startDateInput, #endDateInput, .input-group, input').on('dp.change keyup', function () {
                timelinetable.draw();
            });

            $('#clearDates').click(function (evt) {
                $('#startDateInput').val('');
                $('#endDateInput').val('');
                $('#search').val('');
                timelinetable.draw();
            });

            $('#searchButton').click(function (evt) {
                timelinetable.data();
            });




            // , #startDateInput
            $('#startDate').datetimepicker({
                format: 'YYYY-MM-DD'
            });

            //$('#endDate').datetimepicker({
            //    format: 'YYYY-MM-DD'
            //});

            $('#endDate').datetimepicker({
                format: 'YYYY-MM-DD',
                useCurrent: false //Important! See issue #1075
            });

            //$('#endDateInput').datetimepicker({
            //    format: 'YYYY-MM-DD',
            //    useCurrent: false //Important! See issue #1075
            //});



            $("#startDate").on("dp.change", function (e) {
                $('#endDate').data("DateTimePicker").minDate(e.date);
            });
            $("#endDate").on("dp.change", function (e) {
                $('#startDate').data("DateTimePicker").maxDate(e.date);
            });

            var sidebarCollapsed = false;
            $('#sidebar-arrow').click(function (evt) {
                if (sidebarCollapsed) {
                    sidebarCollapsed = false;
                    $('.sidebar-wrapper').animate({ left: '0px' }, function () {
                        $('#sidebar-arrow').removeClass('rightArrow');
                        $('#sidebar-arrow').addClass('leftArrow');
                    });
                    $('.main-content').animate({ marginLeft: '230px' });
                    $('.sidebar-content').css({ 'display': 'block' });
                }
                else {
                    sidebarCollapsed = true;
                    $('.sidebar-wrapper').animate({ left: '-210px' }, function () {
                        $('.sidebar-content').css({ 'display': 'none' });
                        $('#sidebar-arrow').removeClass('leftArrow');
                        $('#sidebar-arrow').addClass('rightArrow');
                    });
                    $('.main-content').animate({ marginLeft: '20px' });
                }
            });

            // Handle media query change with jQuery
            var mql = window.matchMedia("(max-width: 640px)");
            function handleScreenSizeChange(evt) {
                if (evt.matches) {
                    $('.sidebar-wrapper').css({ position: 'inherit', top: '0px', width: '100%', height: 'auto' });
                    $('.sidebar-toggle').css({ display: 'none' });
                    $('.main-content').css({ marginLeft: '10px' });
                }
                else {
                    $('.sidebar-wrapper').css({ position: 'fixed', top: '50px', width: '230px', height: '100%' });
                    $('.sidebar-toggle').css({ display: 'block' });
                    $('.main-content').css({ marginLeft: sidebarCollapsed ? '10px' : '230px' });
                }
            }
            mql.addListener(handleScreenSizeChange);
            handleScreenSizeChange(mql); // Set right styles on startup.
        });
    </script>
}