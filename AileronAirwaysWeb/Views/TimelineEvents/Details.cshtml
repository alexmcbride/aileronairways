@model TimelineEvent
@{
    ViewData["Title"] = "Event Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section AddToHead{
    <link href="~/css/eventDetailed.css" rel="stylesheet" />
}



<div id="superAwesomeTester" style="display: none;">Banana</div>
<div class="container">
    <div class="col-sm-12">

        <div id="eventHeader">
            <div id="backArrow">

                <a class="arrowLink" @*onclick="goBack()"*@ asp-action="Index" asp-route-timelineId="@ViewBag.TimelineId"><i class="fas fa-arrow-left"></i></a>
            </div>
            <div class="headerSection">
                <h2 class="mainHeader">@Model.Title </h2>
                <hr class="headerHR" />
                <h4><em>@Model.EventDateTime.ToString("dd MMMM yyyy")</em></h4>
            </div>


        </div>
    </div>
</div>




<!-- Tab Section Start -->
<div class="bgColor">
    <div>
        <div class="tabLinksContainer">
            <div class="tab">
                <button class="tablinks uppercase active" onclick="openTab(event, 'overview')">Overview</button>
                <button class="tablinks uppercase" onclick="openTab(event, 'attachments')">Attachments</button>
                <button class="tablinks uppercase" onclick="openTab(event, 'gallery')">Gallery</button>
                <button class="tablinks uppercase" onclick="openTab(event, 'locationtab')">Location</button>

            </div>
        </div>
    </div>





    <!-- Tabs/Headings -->
    <!-- Overview TAB -->
    <div id="overview" class="tabcontent" style="display: block;">
        <div id="descriptionContent">
            @Html.Partial("Description", Model)
        </div>
    </div>

    <!-- Attachments TAB -->
    <div id="attachments" class="tabcontent">




        @if (Model.Attachments.Any())
        {
            <table class="table">
                <thead>
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.Title)
                        </th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.Attachments)
                    {
                        <tr>
                            @if (!item.IsImage)
                            {
                                <td>
                                    <a asp-controller="Attachments" asp-action="Download" asp-route-attachmentId="@item.Id">@item.Title</a>

                                </td>
                                @*<a asp-controller="Attachments" asp-action="Details" asp-route-eventId="@ViewBag.EventId" asp-route-attachmentId="@item.Id">@item.Title</a>*@
                            }



                            @if (!item.IsImage)
                            {
                                <td>
                                    @Html.ActionLink("Delete", "Delete", new { eventId = ViewBag.EventId, attachmentId = item.Id })

                                </td>
                            }

                        </tr>
                    }
                </tbody>
            </table>
        }
        else
        {
            <p><em>There are no attachments to display.</em></p>
        }



        <br />


        <form method="post" enctype="multipart/form-data" asp-controller="Attachments" asp-action="Upload" asp-route-eventId="@ViewBag.EventId">
            <div class="form-group formDragAndDrop">
                @*<p>Upload one or more attachments:</p>*@
                <input id="fileUpload" type="file" name="files" multiple class="form-control dragAndDrop" />
            </div>

            <input type="submit" value="Upload" class="btn btn-default" />
        </form>


    </div>


    <!-- Gallery TAB -->
    <div id="gallery" class="tabcontent">


        @if (Model.AttachmentImagesCount > 0)
        {
            int i = 1;

            <div class="slideshow-container">
                @foreach (var item in Model.Attachments)
                {
                    @if (item.IsImage)
                    {
                        <div class="mySlides">
                            <div class="numbertext">@i / @Model.AttachmentImagesCount</div>
                            <img src="@Url.AttachmentLink(item)" style="width:100%" object-fit contain>
                            <div class="text">@item.Title</div>
                        </div>
                        i++;
                    }
                }



                <a class="prev" onclick="plusSlides(-1)">&#10094;</a>
                <a class="next" onclick="plusSlides(1)">&#10095;</a>

            </div>
            <br>
            <div style="text-align:center">

                @if (Model.AttachmentImagesCount > 0)
                {
                    int j = 1;
                    foreach (var item in Model.Attachments)
                    {

                        if (item.IsImage)
                        {


                            <span class="dot" onclick="currentSlide(@j)"></span>


                            j++;
                        }

                    }

                }
            </div>
        }


        <br />
        <br />

        <form method="post" enctype="multipart/form-data" asp-controller="Attachments" asp-action="Upload" asp-route-eventId="@ViewBag.EventId">
            <div class="form-group formDragAndDrop">
                @*<p>Upload one or more attachments:</p>*@
                <input id="fileUpload" type="file" name="files" multiple class="form-control dragAndDrop" />
            </div>

            <input type="submit" value="Upload" class="btn btn-default" />
        </form>
    </div>


    <!-- Location TAB -->
    <div id="locationtab" class="tabcontent">
        @*@Html.Partial("~/Views/TimelineEvents/EditLocation.cshtml", new AileronAirwaysWeb.ViewModels.TimelineEventLocationViewModel())
            @Html.Partial("EditLocation", Model.TimelineEventLocationViewModel)*@
       
        <p id="geoNonSupport" style="color:red"></p>
        <p>Location is: <div id="friendlyaddress" ></div></p>
        
        <form asp-antiforgery="true" id="edit-location-form">
            <div class="form-group">
                @*<label asp-for="Location">Location is </label>*@
                <input type="hidden" id="locationaddress" asp-for="Location" class="form-control" />
                @*<span asp-validation-for="Location" class="text-danger"></span>*@
            </div>

            <button type="submit" id="btnSave" class="btn btn-default"><i class="far fa-edit" aria-hidden="true"></i></button>
        </form>
        <div class="form-group">
            <label>latitude</label>
            <input type="text" name="longitude" id="curlng" class="form-control" />
        </div>
        <div class="form-group">
            <label>longitude</label>
            <input type="text" name="longitude" id="curlat" class="form-control" />
        </div>


        <div id="googleMap" style="height:400px; width: 100%;"></div>

    </div>

</div>

<div id="bottomEventNav">
    <div class="btnContainer">
        @if (@ViewBag.PreviousEvent != null)
        {
            <a class="button btnEvent uppercase" asp-action="details" asp-route-timelineId="@ViewBag.TimelineId" asp-route-eventId="@ViewBag.PreviousEvent.Id">
                <i class="fas fa-arrow-left xl"></i>   @ViewBag.PreviousEvent.Title
            </a>
        }
        <a class="button btnEvent uppercase" asp-action="delete" asp-route-timelineId="@ViewBag.TimelineId" asp-route-eventId="@Model.Id">Delete</a>
        @if (@ViewBag.NextEvent != null)
        {
            <a class="button btnEvent btnRight uppercase" asp-action="details" asp-route-timelineId="@ViewBag.TimelineId" asp-route-eventId="@ViewBag.NextEvent.Id">
                @ViewBag.NextEvent.Title  <i class="fas fa-arrow-right"></i>
            </a>
        }
        <p id="geoNonSupport" style="color:red;"></p>
    </div>
</div>


@section Scripts{

<script>
    function myMap() {
        var loc = "@Model.Location"@*!= null ? @Model.Location.Split()[0] : null*@;
        var lat = "55.873543";
        var lng = "-4.289058";
        debugger;
        if (loc == "0,0") {
            var options = { enableHighAccuracy: true, };
            if (navigator.geolocation) {
                function error(err) {
                    document.getElementById("geoNonSupport").innerHTML = "Geolocation is not supported by this browser."
                    console.warn(`ERROR(${err.code}): ${err.message}`);
                }
                function showPosition(position) {
                    lat = String(position.coords.longitude);
                    lng = String(position.coords.longitude);
                    loc = lat.concat(",", lng);
                    document.getElementById("curlat").setAttribute("value", lat);
                    document.getElementById("curlng").setAttribute("value", lng);
                    document.forms['edit-location-form']['locationaddress'].value = loc;
                }
                navigator.geolocation.getCurrentPosition(showPosition, error, options);
            }
        }
        else if (@Model.Location != null) {
            lat = "@Model.Location.Split(",")[0]";
            lng = "@Model.Location.Split(",")[1]";
            loc = lat.concat(",", lng);
            document.getElementById("curlat").setAttribute("value", "@Model.Location.Split(",")[0]");
            document.getElementById("curlng").setAttribute("value", "@Model.Location.Split(",")[1]");
            document.forms['edit-location-form']['locationaddress'].value = loc;
        }
        var latlng = new google.maps.LatLng(lat, lng);
        var mapOptions = {
            zoom: 10,
            center: latlng
        }
        var map = new google.maps.Map(document.getElementById("googleMap"), mapOptions);

        var marker = new google.maps.Marker({
            position: latlng,
            title: 'Set lat/lon values for this property',
            map: map,
            draggable: true
        });
        marker.setMap(map);

        google.maps.event.addListener(marker, 'dragend', function (event) {
            var dglat = document.getElementById("curlat").value = String(this.getPosition().lat());
            var dglng = document.getElementById("curlng").value = String(this.getPosition().lng());
            var dgloc = dglat.concat(",", dglng);
            document.forms['edit-location-form']['locationaddress'].value = dgloc;
        });
    }

    //    google.maps.event.addListner(marker, 'dragend', function () {
    //        var input = document.forms['edit-location-form']['locationaddress'].value;
    //        var latlngStr = input.split(',', 2);
    //        var latlng = { lat: parseFloat(latlngStr[0]), lng: parseFloat(latlngStr[1]) };
    //        geocoder.geocode({ 'location': latlng }, function (results, status) {
    //            if (status === 'OK') {
    //                if (results[0]) {
    //                    map.setZoom(11);
    //                    var marker = new google.maps.Marker({
    //                    position: latlng,
    //                    map: map
    //                    });
    //                    document.getElementById('friendlyaddress').innerHTML = String(results[0].formatted_address);
    //                } else {
    //                    document.getElementById('friendlyaddress').innerHTML = "no Address found";
    //                }
    //            } else {
    //                document.getElementById('friendlyaddress').innerHTML = 'Geocoder failed due to: ' + status;
    //            }
    //        });
    //    });

    //    document.addEventListener("DOMContentLoaded", function () {
    //        geocodeLatLng(geocoder, map/*, infowindow*/);
    //    });

    //}
    //    function geocodeLatLng(geocoder, map/*, infowindow*/) {
    //        var input = document.forms['edit-location-form']['locationaddress'].value;
    //        var latlngStr = input.split(',', 2);
    //        var latlng = { lat: parseFloat(latlngStr[0]), lng: parseFloat(latlngStr[1]) };
    //        geocoder.geocode({ 'location': latlng }, function (results, status) {
    //            if (status === 'OK') {
    //                if (results[0]) {
    //                    map.setZoom(11);
    //                    var marker = new google.maps.Marker({
    //                    position: latlng,
    //                    map: map
    //                    });
    //                    document.getElementById('friendlyaddress').innerHTML = String(results[0].formatted_address);
    //                    //infowindow.setContent(results[0].formatted_address);
    //                    //infowindow.open(map, marker);
    //                } else {
    //                    document.getElementById('friendlyaddress').innerHTML = "no Address found";
    //                }
    //            } else {
    //                document.getElementById('friendlyaddress').innerHTML = 'Geocoder failed due to: ' + status;
    //            }
    //        });
    //    }
    

</script>

    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCfblapLmgaCE0GVpChYqSoGMJ8ik09IZA&callback=myMap"></script>

    <script>

    $('#edit-location-form').on('submit', function (e) {
    e.preventDefault();
    var data = $('#edit-location-form').serialize();
    $.post("/Timelines/" + "@ViewBag.TimelineId" + "/Events/" + "@ViewBag.EventId" +"/EditEventLocation", data, function (response) {
    // If edit was successful post returns with OK
    if (response.startsWith('OK')) {
    location.href = "/Timelines/" + "@ViewBag.TimelineId" + "/Events/" + "@ViewBag.EventId"; // Redirect here instead of on server-side
    // Hack to make flash message appear correctly when side bar is shown.
    $('.flash-messages').css('margin-left', '20px');
    }
    else {
    // Otherwise redisplay form.
    location.href = "/Timelines/" + "@ViewBag.TimelineId" + "/Events/" + "@ViewBag.EventId";
    }
    }, 'html');

    });
    </script>
    <script>
        function goBack() {
            window.history.back();
        }

        function openTab(evt, tabName) {
            var i, tabcontent, tablinks;
            tabcontent = document.getElementsByClassName("tabcontent");
            for (i = 0; i < tabcontent.length; i++) {
                tabcontent[i].style.display = "none";
            }
            tablinks = document.getElementsByClassName("tablinks");
            for (i = 0; i < tablinks.length; i++) {
                tablinks[i].className = tablinks[i].className.replace(" active", "");
            }
            document.getElementById(tabName).style.display = "block";
            evt.currentTarget.className += " active";
        }
    </script>


    <!-- Image Gallery Scripts -->
    <script>
        var slideIndex = 1;
        showSlides(slideIndex);

        function plusSlides(n) {
            showSlides(slideIndex += n);
        }

        function currentSlide(n) {
            showSlides(slideIndex = n);
        }

    function showSlides(n) {
        var i;
        var slides = document.getElementsByClassName("mySlides");
        var dots = document.getElementsByClassName("dot");
        if (n > slides.length) { slideIndex = 1 }
        if (n < 1) { slideIndex = slides.length }
        for (i = 0; i < slides.length; i++) {
            slides[i].style.display = "none";
        }
        for (i = 0; i < dots.length; i++) {
            dots[i].className = dots[i].className.replace(" active", "");
        }
        slides[slideIndex - 1].style.display = "block";
        dots[slideIndex - 1].className += " active";
    }
</script>


    <script>
        function handleEditDescriptionCancel(id) {
            $('#cancelEditDescriptionBtn').click(function (evt) {
                $.get('/TimelineEvents/Description/' + id, function (data) {
                    $('#descriptionContent').html(data);
                    handleEditDescription();
                });
            });
        }

        function handleEditDescription() {
            $('#editDescriptionLink').click(function (evt) {
                evt.preventDefault();

                var id = $('#editDescriptionLink').attr('data-id');
                $.get('/TimelineEvents/DescriptionEdit/' + id, function (data) {
                    $('#descriptionContent').html(data);

                    $('#editDescriptionForm').on('submit', function (evt) {
                        evt.preventDefault();
                        disableFormElement('#editDescriptionBtn', true);

                        var data = $('#editDescriptionForm').serialize();
                        $.post('/TimelineEvents/DescriptionEditPost/' + id, data, function (data) {
                            $('#descriptionContent').html(data);
                            handleEditDescriptionCancel(id);
                            handleEditDescription();
                        });
                    });

                    handleEditDescriptionCancel(id);

                });
            });
        }

        $(function () {
            handleEditDescription();
        });
    </script>
}