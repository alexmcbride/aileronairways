@model IEnumerable<TimelineEvent>
@{
    ViewData["Title"] = "Timeline Events";
    Layout = "~/Views/Shared/_Layout.cshtml";

}

@section AddToHead{

    <link href="~/css/partialViewCSS.css" rel="stylesheet" />
    <script src="~/js/site.js"></script>
}

<div class="container body-content">
    <button id="addEventBtn" title="Add Event">&#43;</button>

    @*Side Panel - Will Display all Headings*@

    <div id="mainSidePanel">
        @*<div class="container body-content">
        </div>*@
        <div class="headerSection">
            <h2 class="mainHeader">@ViewBag.TimelineTitle </h2>
            <hr class="headerHR" />
            <h4><em>@ViewBag.TimelineCreationTimeStamp.ToString("dd MMMM yyyy")</em></h4>
        </div>


        <hr />





        <!-- Side Nav Content -->
        <div id="mySidenav" class="sidenav">
            <!-- Arrow Collapse        <a href="javascript:void(0)" class="closebtn" onclick="closeNav()"><i class="leftArrow"></i></a>
        -->
            <!-- Searching for Events -->
            <div id="sideNavArrows" onclick="openNav()">
                <div" id="arrowsSidePanel"><i id="arrowChange" class="rightArrow"></i></div">
            </div>

            <br /><br />




            <div id="sideNavContent" style="visibility: hidden;">
                <!--
            <hr class="sidPanelHR" />

                      <div id="searchBox">
                          &nbsp; Html.TextBox("searchStringUserNameOrEmail", ViewBag.CurrentFilter as string, new { placeholder = "Search..." })
                      </div> -->
                <div id="searchBox">
                    <input type="text" id="myInputSearchEvents" onkeyup="filterEventTitles()" placeholder="search events...">
                </div>


                 @if (Model.Any())
                    {   <!-- Zoomed In View - Default -->


                    <div id="timelinePartial_In_Links" style="visibility: visible;">
                          <div id="eventNameList">

                            @{
                                int i = 0;
                                foreach (var item in Model)
                                {
                                    i = i + 1;
                                    <a class="eventTitlesFilter uppercase" href="#eventLink-@item.Id">@i: @item.Title</a>
                                }
                            }

                        </div>
                    </div>
                    <div id="timelinePartial_Out_Links" style="display: none;">
                          <div id="eventNameListPartial">

                            @{
                                int j = 0;
                                foreach (var item in Model)
                                {
                                    j = j + 1;
                                    <a class="eventTitlesFilter uppercase" href="#eventLinks-@item.Id">@j: @item.Title</a>
                                }
                            }

                    </div>
                    </div>
                    
                }
                else
                {
                    <p>No Events Yet</p>

                }
            </div>
        </div>







        @if (Model.Any())
        {

            @*--------------------------------------------------<i class="fas fa-search"></i>---------------------------*@
            <button id="btnPartialToggle" onclick="togglePartial()" style="text-align: center; margin-left: auto; margin-right: auto;">Zoomed View</button>
            <br /><br /><br />
            <!-- Zoomed In View - Default -->
            <div id="timelinePartial_In" style="visibility: visible;">
                @Html.Partial("_TimelineZoomedIn")
            </div>
            <div id="timelinePartial_Out" style="display: none;">
                @Html.Partial("_TimelineZoomedOut")
            </div>

        }
        else
        {
            <p class="text-center">Maybe create an event dipshot. </p>
            <br /><br /><br />

        }







        <script>
            function togglePartial() {

                var btnClick = document.getElementById("btnPartialToggle");
                var partial_In = document.getElementById("timelinePartial_In");
                var partial_Out = document.getElementById("timelinePartial_Out");

                // Links in side panel
                var partial_In_Links = document.getElementById("timelinePartial_In_Links");
                var partial_Out_Links = document.getElementById("timelinePartial_Out_Links");

                if (btnClick.innerHTML === "Zoomed View")
                {
                    btnClick.innerHTML = "UnZoomed View";
                    partial_In.style.display = "none";
                    partial_Out.style.display = "block";

                    // Links in side panel
                    partial_In_Links.style.display = "none";
                    partial_Out_Links.style.display = "block";
                }
                else {
                    btnClick.innerHTML = "Zoomed View";
                    partial_In.style.display = "block";
                    partial_Out.style.display = "none";


                    partial_In_Links.style.display = "block";
                    partial_Out_Links.style.display = "none";
                }




            }

        </script>






        <div class="backToTopContainer" onclick="topFunction()">

            <span><i class="backToTop"></i></span>

        </div>
        <br /><br /><br /><br /><br /><br />
    </div>


    <div id='myModal' class='modal'>
        <div class="modal-dialog">
            <div class="modal-content">
                <div id='myModalContent'></div>
            </div>
        </div>
    </div>
</div>



@section Scripts{
<script>

    var url = "@Url.Action("Create", "TimelineEvents", new { timelineId=ViewBag.TimelineId })";

    function filterEventTitles() {
        var input, filter, table, tr, td, i;

        input = document.getElementById("myInputSearchEvents");

        filter = input.value.toUpperCase();
        titles = document.getElementsByClassName("eventTitlesFilter");


        for (i = 0; i < titles.length; i++) {
            td = titles[i];
            if (td) {
                if (td.innerHTML.toUpperCase().indexOf(filter) > -1) {
                    titles[i].style.display = "";
                } else {
                    titles[i].style.display = "none";
                }
            }
        }
    }

    function openNav() {
        document.getElementById("mySidenav").style.width = "230px";
        document.getElementById("mySidenav").style.marginLeft = "0px";
        document.getElementById("mainSidePanel").style.marginLeft = "230px";

        document.getElementById("sideNavContent").style.visibility = 'visible';
        document.getElementById("sideNavArrows").style.paddingLeft = '200px';
        document.getElementById("sideNavArrows").style.transition = '.5s';

        document.getElementById("sideNavArrows").removeEventListener("click", openNav);
        document.getElementById("sideNavArrows").addEventListener("click", closeNav);

        document.getElementById("arrowChange").classList.remove("rightArrow");
        document.getElementById("arrowChange").classList.add("leftArrow");

        // Make sure flash-message changes position.
        $('.flash-messages').css({ marginLeft: '230px'});
    }


    function closeNav() {

        document.getElementById("mySidenav").style.width = "230px";
        document.getElementById("mySidenav").style.marginLeft = "-210px";
        document.getElementById("mainSidePanel").style.marginLeft = "20px";

        // side panel content GONE! - It's Magic
        document.getElementById("sideNavContent").style.visibility = 'hidden';
        document.getElementById("sideNavArrows").style.paddingLeft = '215px';


        document.getElementById("sideNavArrows").removeEventListener("click", closeNav);
        document.getElementById("sideNavArrows").addEventListener("click", openNav);

        document.getElementById("arrowChange").classList.remove("leftArrow");
        document.getElementById("arrowChange").classList.add("rightArrow");

        // Make sure flash-message changes position.
        $('.flash-messages').css({ marginLeft: '20px' });
    }

    function topFunction() {
        $("html, body").animate({ scrollTop:0 }, "fast");
    }

    function displayCreateModal(data) {
        $('#myModalContent').html(data);
        $('#myModal').modal({ "backdrop": "static", keyboard: true });
        $('#myModal').modal('show');

        // Hook event to Create view form.
        $('#create-event-form').on('submit', function (e) {
            e.preventDefault();

            disableFormElement('#btnSave', true);

            var data = $('#create-event-form').serialize();
            $.post(url, data, function (response) {
                if (response.startsWith('OK')) {
                    var eventId = response.split(' ')[1];
                    location.href = '/timelines/@ViewBag.TimelineId/events/' + eventId;
                    $('#myModal').modal('hide');
                }
                else {
                    displayCreateModal(response);
                }

                disableFormElement('#btnSave', false);
            }, 'html');
        });
    }

    function displayEditModal(data, id) {
        $('#myModalContent').html(data);
        $('#myModal').modal({ "backdrop": "static", keyboard: true });
        $('#myModal').modal('show');

        // Hook event to edit view form.
        $('#edit-event-form').on('submit', function (e) {
            e.preventDefault();

            disableFormElement('#btnSave', true);

            var data = $('#edit-event-form').serialize();
            $.post('/timelines/@ViewBag.TimelineId/events/' + id + '/edit', data, function (response) {
                console.log(response);
                if (response.startsWith('OK')) {
                    var eventId = response.split(' ')[1];
                    location.href = '/timelines/@ViewBag.TimelineId/events';
                    $('#myModal').modal('hide');
                }
                else {
                    displayEditModal(response, id);
                }

                disableFormElement('#btnSave', false);
            }, 'html');
        });
    }

    function displayDeleteModal(data, id) {
        $('#myModalContent').html(data);
        $('#myModal').modal({ "backdrop": "static", keyboard: true });
        $('#myModal').modal('show');

        // Hook event to edit view form.
        $('#delete-event-form').on('submit', function (e) {
            e.preventDefault();

            disableFormElement('#btnSave', true);

            var data = $('#delete-event-form').serialize();
            $.post('/timelines/@ViewBag.TimelineId/events/' + id + '/delete', data, function (response) {
                if (response.startsWith('OK')) {
                    var eventId = response.split(' ')[1];
                    location.href = '/timelines/@ViewBag.TimelineId/events';
                    $('#myModal').modal('hide');
                }
                else {
                    displayDeleteModal(response, id);
                }

                disableFormElement('#btnSave', false);
            }, 'html');
        });
    }

    $(function () {
        $("#addEventBtn").click(function () {
            $.ajax({
                type: "GET",
                url: url,
                contentType: "application/html; charset=utf-8",
                datatype: "html",
                success: function (data) {
                    displayCreateModal(data);
                },
                error: function () {
                    alert("Dynamic content load failed.");
                }
            });
        });

        $(".modal-link-edit").click(function () {
            var id = $(this).attr('data-id');
            $.ajax({
                type: "GET",
                url: "/Timelines/" + "@ViewBag.TimelineId" + "/Events/" + id +"/Edit",
                contentType: "application/json; charset=utf-8",
                datatype: "json",
                success: function (data) {
                    displayEditModal(data, id);
                },
                error: function () {
                    alert("Dynamic content load failed.");
                }
            });
        });

        $("#closbtn").click(function () {
            $('#myModal').modal('hide');
        });

        $(".modal-link-delete").click(function () {
            var id = $(this).attr('data-id');
            $.ajax({
                type: "GET",
                url: "/Timelines/" + "@ViewBag.TimelineId" + "/Events/" + id +"/Delete",
                contentType: "application/json; charset=utf-8",
                datatype: "json",
                success: function (data) {
                    displayDeleteModal(data, id);
                },
                error: function () {
                    alert("Dynamic content load failed.");
                }
            });
        });

        // Hack to make flash message appear correctly when side bar is shown.
        $('.flash-messages').css('margin-left', '20px');
    });

</script>
}